{%- macro adjust_condition(condition, is_night) -%}
{%- if is_night and condition == 'sunny' -%}
night
{%- elif is_night and condition == 'partlycloudy' -%}
night-partly-cloudy
{%- else -%}
{{ condition }}
{% endif %}
{%- endmacro -%}

{%- macro adjust_condition_for_night(forecast) -%}
{%- set next_setting = as_timestamp(state_attr('sun.sun', 'next_setting')) -%}
{%- set next_rising = as_timestamp(state_attr('sun.sun', 'next_rising')) -%}
{%- set timestamp = as_timestamp(forecast.datetime) -%}
{%- if next_rising < next_setting -%}
{%- set is_night = timestamp < next_rising -%}
{%- else -%}
{%- set is_night = timestamp > next_setting and timestamp < next_rising -%}
{%- endif -%}
{{ adjust_condition(forecast.condition, is_night) }}
{%- endmacro -%}

{%- macro forecast_condition(forecast, index) -%}
{%- if forecast and index < (forecast | length) -%} 
{{ adjust_condition_for_night(forecast[index]) }}
{%- endif -%}
{%- endmacro -%}

{%- macro forecast_temperature(forecast, index, entity) -%}
{%- if forecast and index < (forecast | length) -%} 
{{ forecast[index].temperature | int }} {{ state_attr(entity, 'temperature_unit') }}
{%- endif -%}
{%- endmacro -%}

{%- macro forecast_timestamp(forecast, index) -%}
{%- if forecast and index < (forecast | length) -%} 
{{ (forecast[index].datetime | as_datetime | as_local).strftime('%-I %p') }}
{%- endif -%}
{%- endmacro -%}